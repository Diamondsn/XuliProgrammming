//https://blog.csdn.net/xuhang1993/article/details/71194178

https://blog.csdn.net/xiaoming100001/article/details/81109617

为什么需要三次握手呢？为了防止已失效的连接请求报文段突然又传送到了服务
端，因而产生错误。

比如：client发出的第一个连接请求报文段并没有丢失，而是在某个网络结点长
时间的滞留了，以致延误到连接释放以后的某个时间才到达server。本来这是一
个早已失效的报文段，但是server收到此失效的连接请求报文段后，就误认为是
client再次发出的一个新的连接请求，于是就向client发出确认报文段，同意建
立连接。假设不采用“三次握手”，那么只要server发出确认，新的连接就建立
了，由于client并没有发出建立连接的请求，因此不会理睬server的确认，也不
会向server发送数据，但server却以为新的运输连接已经建立，并一直等待
client发来数据。所以没有采用“三次握手”，这种情况下server的很多资源就白
白浪费掉了。

为什么需要四次挥手呢？TCP是全双工模式，当client发出FIN报文段时，只是表
示client已经没有数据要发送了，client告诉server，它的数据已经全部发送完
毕了；但是，这个时候client还是可以接受来server的数据；当server返回ACK
报文段时，表示它已经知道client没有数据发送了，但是server还是可以发送数
据到client的；当server也发送了FIN报文段时，这个时候就表示server也没有
数据要发送了，就会告诉client，我也没有数据要发送了，如果收到client确认
报文段，之后彼此就会愉快的中断这次TCP连接。

TIME_WAIT状态
TCP要保证在所有可能的情况下使得所有的数据都能够被正确送达。
问题:
我们没有任何机制保证最后的一个ACK能够正常传输，第二，网络上仍然有可能有
残余的数据包(wandering duplicates)，我们也必须能够正常处理。

1。防止上一次连接中的包，迷路后重新出现，影响新连接
（经过2MSL，上一次连接中所有的重复包都会消失）
2。可靠的关闭TCP连接
在主动关闭方发送的最后一个 ack(fin) ，有可能丢失，这时被动方会重新发
fin, 如果这时主动方处于 CLOSED 状态 ，就会响应 rst 而不是 ack。所以
主动方要处于 TIME_WAIT 状态，而不能是 CLOSED 。