1 <strong>和<b>标签的区别
    <strong>是语义化标签，<b>是自然样式标签。虽然二者在页面上显示的都是加粗的效果，但是<strong>是为了页面重读而加粗，而<b>是为了加粗而加粗。
    
2 引申：语义化的意义/语义化的好处

    (1)html语义化让页面的内容结构化，结构更清晰，便于对浏览器，搜索引擎解析;
    (2)即使在没有样式css情况下也以一种文档格式显示，并且容易阅读;
    (3)搜索引擎的爬虫也依赖于标记来确定关键字权重；
    (4)便于团队开发和维护；
    
3 前端性能优化的方法

    (1)减少HTTP请求次数，运用CSS_Sprites,JS、CSS源码压缩,网页GZIP,webpack方法,CDN托管等技术；
		webpack可以将多种静态资源js，css，换成一个静态文件，减少了页面的请求
    (2)减少DOM操作次数（事件代理/委托），优化JavaScript性能；
    (3)少用全局变量，缓存DOM结点查找的结果；
    (4)图片预加载，将样式表放在顶部，将脚本放在底部；
    (5)避免使用table元素，table要等其中的内容完全下载后才会显示。比div+css慢；

4 前端页面由哪三层构成

    (1)结构层：HTML 对网页内容的语义含义做出不包含任何关于如何显示有关内容的信息；
    (2)表示层：CSS  对如何显示有关内容的问题做出解答；
    (3)行为层：JavaScript 内容应该如何对事件做出反应；
    
5 引申: 页面渲染的过程

	1 解析DOM节点形成DOM Tree
	2 解析CSS样式形成Rule Tree
	3 把DOM Tree 和 Rule Tree 结合生成Rendering Tree
	4 添加JS事件绑定

	reflow：浏览器要花时间去渲染，当它发现了某个部分发生的变化影响了布局， 那就需要倒回去去重新渲染
		1 页面初始化
		2 操作DOM时
		3 某些元素的尺寸变了
		4 某些CSS属性的变化
	repaint： 如果只是改变了某个元素的背景颜色，文字颜色等，不影响元素周围或内部布局的属性，将只会引起浏览器的重绘，即重画一部分
	回流比重绘更花时间，也就更影响性能，所以在写代码时，要尽量避免过多的reflow
	
5.1 引申：从输入URL到浏览器显示页面的过程
	网络通信+页面渲染
		DNS解析
		TCP连接
		发送HTTP请求
		服务器处理请求并返回HTTP报文
		浏览器解析渲染页面
		连接结束
	
7 MVVM(本质上是MVC的一种改进)
    MVVM模式和MVC模式一样，主要目的是分离视图和模型
	有几大优点：(1)低耦合 视图可以独立于Model变化和修改
	            (2)可重用性:把一些视图逻辑放在viewModel里，可让很多view重用这个逻辑
				(3)独立开发
				(4)可测试：测试可以针对ViewModel来写

8 如何实现浏览器内多个标签页之间的通信
    webSocket postMessage
	也可调用localStorage，cookies等本地存储方式
	
	localStorage: ---只能存储字符串
		保存数据：localStorage.setItem(key,value);
		读取数据：localStorage.getItem(key);
		删除单个数据：localStorage.removeItem(key);
		删除所有数据：localStorage.clear();
		得到某个索引的key：localStorage.key(index); --- 读取第index个数据的键名
9、HTML5中<script>标签有async属性，如果设置为async="async"就能让原本阻塞式的js加载方式变成异步，如果设置defer="defer",就可以规定当页面已完成解析后，执行脚本
